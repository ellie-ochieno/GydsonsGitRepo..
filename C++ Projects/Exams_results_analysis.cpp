
/*
            -------------------------RESULTS MANAGEMENT SYSTEM C++ PROGRAM-----------------------
*/

#include <iostream>
#include <fstream>  
#include <iomanip>
#include <string.h>
#include <ctime>
#define logo "@elliesCodelabSystems"

using namespace std;
/*Program to compute and analyze class performance*/

int population, size, i, k, c, d, n, x, subjctChoice, stdntRegNo[1000], choice, regErrorChoice;
int numOfBoys, numOfGirls, totalnum, classGndr, numOfStdnts[1000], reportChoice, nameErrorChoice;
int max, totalSum, bTotalSum, gTotalSum, subjctMaxMks, subjctsOffered, sbjctErrorChoice, numOfCompulsary, numOfOptional;
float stdntMks[10000],sum, classMean, gradepts, meanPts[10000], gMeanPts, bMeanPts, z[100];
char subject[50];
char stdntId[1000],classId[50], tchrNames[20], names[10], names2[10];
float numslist[1000], subjctMean[10000], subjctTmks[10000], meanMrks[1000], overalStdMrk, meanMrksTotal[1000];
/*variables defined as global*/

class Student
{
public:
    void get_data()
    {
        char names[size][10];
        char tchrNames[size][20];
        cout<<"\n\n\t 1.O1. CLASS DATA"<<endl;
        cout<<"\t -----------------------------------------------------------------------";
        cout<<"\n\n\t --------CLASS GENDER SYSTEM--------\n"<<endl;;
        cout<<"   ENTER:\n";
        cout<<"\n\t1. For single gender class(i.e class of boys or girls ONLY) OR\n";
        cout<<"\t2. For mixed gender class(i.e class of BOTH boys & girls)\n";
        cout<<"\n\tYour choice: ";
        cin>>classGndr;
        /*class gender system check*/

        cout<<"\n\n\t --------SUBJECTS SELECTION SYSTEM--------\n"<<endl;;
        cout<<"   ENTER:\n";
        cout<<"\n\t1. For ALL students taking similar subjects OR\n";
        cout<<"\t2. For SOME students taking different subjects\n";
        cout<<"\n\tYour choice: ";
        cin>>subjctChoice;
        /*class gender system check*/

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
        char stdntId[population][100];
                 /*Time*/
        time_t now = time(0);
            /*current date/time based on current system*/
        char*dt =ctime(&now);
            /*converting to string*/

/**----------------------------------------FIRST PACKAGE-----------------------------------------------
 CLASS GENDER SYSTEM -single gender.
 SUBJECTS SELECTION SYSTEM -all similar subjects
 **/

        if(classGndr==1 && subjctChoice==1)
        {
            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------\n"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            for(k=0; k<population; k++)
            {
                cout<<"\n\t "<<(k+1)<<". ";
                cin>>stdntId[k];
                       /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[k], stdntId[k-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<stdntId[k]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(k-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                cout<<"\n\t   "<<" Reg No. ";
                cin>>stdntRegNo[k];
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[k]== stdntRegNo[k-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[k]<<"' already exists as '"<<stdntId[k-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[k-c]<<" and "<<stdntId[k]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[k]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }
                        }
                    }
                    }
            }       /*Reg number validity check*/
            }
            
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                k =0;
                for(k=0; k<population; k++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                    cout<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           cout<<"\n\t "<<dt<<endl;
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           ClassListFile.close();
                            //closes the file
                            
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   NOTE: \n";
            cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Subjects and subject-teachers by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE: ";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS .\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }


/*---------------------------SUBJECT & TEACHER IDs CHECK------------------------------------*/


            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teacher IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
			}

            cout<<"\n\t2. Overall percentage marks per subject(i.e 100, 70 etc): \n\n\t\t= ";
            cin>>subjctMaxMks;

            cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 
                                 
            cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
            cout<<"\t -----------------------------------------------------------------------";
            cout<<"\n\n   Marks for: \n";

            for(k=0; k<population; k++)
            {
                cout<<"\n\t"<<(k+1)<<". "<<stdntId[k]<<": \n";
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                cin>>stdntMks[i];
                if(stdntMks[i]>subjctMaxMks)
                {
                    cout<<"\n ---------------------ERROR!!--------------------\n";
                    cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                    cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                    cout<<"  >Please check and try again.\n  System waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                }else if(stdntMks[i]<0)
                {
                    cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                    cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                    cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                    cout<<"\n\tYour choice: ";
                    cin>>choice;
                    if(choice==1)
                    {
                        cout<<"\n\t OK.\n";
                    }else if(choice==2)
                    {
                        cout<<"\n\tRe-enter the marks and continue.\n";
                        cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                        cin>>stdntMks[i];
                    }                     /*Checking entered marks*/
                }
                sum += stdntMks[i];
                totalSum += stdntMks[i];
                subjctTmks[i] +=stdntMks[i];
            }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                cin>>stdntMks[i];
                if(stdntMks[i]>subjctMaxMks)
            {
                    cout<<"\n ---------------------ERROR!!--------------------\n";
                    cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                    cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                    cout<<"  >Please check and try again.\n  System waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
            }else if(stdntMks[i]<0)
            {
                    cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                    cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                    cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                    cout<<"\n\tYour choice: ";
                    cin>>choice;
                    if(choice==1)
                    {
                        cout<<"\n\t OK.\n";
                    }else if(choice==2)
                    {
                        cout<<"\n\tRe-enter the marks and continue.\n";
                        cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                        cin>>stdntMks[i];
                    }                     /*Checking entered marks*/
                }
                sum += stdntMks[i];
                totalSum += stdntMks[i];
                subjctTmks[i] +=stdntMks[i];
            }
		    }
            z[k]=sum;
            numslist[k]= sum;
            sum -=z[k]; /*normalizes the value of 'sum' for each student*/
            
            
            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(k)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            i=0;
            for(i=0; i<size; i++)
            {
                meanMrks[i] = (stdntMks[i] / subjctMaxMks) * 84;
                                 /*subject mean score */
                meanMrksTotal[k] += meanMrks[i];
                meanPts[k] = meanMrksTotal[k] / size;
                                 /*checking subject grade*/
                std::cout<< std::setprecision(5)<<endl;
                                 /*sets value precision to 5 digits*/
                         
                if(meanMrks[i] >=80)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<80 && meanMrks[i]>=74)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<74 && meanMrks[i]>=68)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[i]<68 && meanMrks[i]>=62)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[i]<62 && meanMrks[i]>=56)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[i]<56 && meanMrks[i]>=50)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<50 && meanMrks[i]>=44)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<44 && meanMrks[i]>=38)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<38 && meanMrks[i]>=32)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<32 && meanMrks[i]>=26)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[i]<26 && meanMrks[i]>=20)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[k] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<80 && meanPts[k]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<74 && meanPts[k]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[k]<68 && meanPts[k]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[k]<62 && meanPts[k]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[k]<56 && meanPts[k]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<50 && meanPts[k]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<44 && meanPts[k]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<38 && meanPts[k]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<32 && meanPts[k]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[k]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
         
             }
             cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
       
        
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        if(c<=population)
        {
            for(k=0; k<size; k++)
            {
                std::cout.precision(4);
                subjctMean[k] =subjctTmks[k] / population;
                std::cout<< std::setprecision(5)<<endl;
                                 /*sets value precision to 5 digits*/

                             /*subject mean points formula*/
                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tA"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tA-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tB+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tB"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tB-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tC+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tC"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tC-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tD+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tD"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tD-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\tE"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        SUBJECTS_perfomance.close();
                            //closes the file
                            
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
}


/**----------------------------------------SECOND PACKAGE-----------------------------------------------
 CLASS GENDER SYSTEM -mixed gender.
 SUBJECTS SELECTION SYSTEM -all similar
 **/
        else if(classGndr==2 && subjctChoice==1)
        {
            cout<<"\n\t1. Number of boys: \n\n\t\t\t= ";
            cin>>numOfBoys;
            numOfGirls =population - numOfBoys;
        if(numOfBoys < population)
        {
            cout<<"\n\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
            /*gender population*/

            totalnum= numOfBoys + numOfGirls;

            cout<<"\n\n\t--------1.011. STUDENTS' IDs--------\n"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                    /*checking repetition in id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2'for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
            
            ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
            ClassListFile<<"\n\t "<<dt<<endl;
            ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\n\t "<<dt<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            ClassListFile.close();
                            //closes the file

            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   NOTE: \n";
            cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Subjects and subject-teachers by name:\n";
            cout<<"\n\t   <>. 'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }
			}
                cout<<"\n\t2. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                            if(choice==1)
                            {
                                cout<<"\n\t OK.\n";
                            }else if(choice==2)
                            {
                                 cout<<"\n\tRe-enter the marks and continue.\n";
                                 cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                                 cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                      
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
    

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        if(c<=population)
        {
            k=0;
            for(k=0; k<size; k++)
            {
                std::cout.precision(4);
                subjctMean[k] =subjctTmks[k] / population;
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                               //class list in writing mode closed
        cout<<"\n\n\t -----------------------------------------------------------------------\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\n\n -------------------------------------------------------------------------------\n";
        
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";

                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                /*total summation*/

          }else    /*ERROR resolving for numOfBoys>population*/
          {
             if(numOfBoys>=population)
             {
                cout<<"\n ---------------------OOPS!!-----------------\n\n";
                cout<<" #. CONTRADICTING ERROR detected.\n";
                cout<<"\n General class population defined as\n\n\t\t= "<<population<<endl;
                cout<<" Therefore, number of MALE students CANNOT be\n\n\t\t= "<<numOfBoys<<endl;
                cout<<" Check the ERROR and make appropriate correction.\n";
                cout<<" System waiting...\n\n ENTER: \n";
                cout<<"\n\t1. Number of Boys: ";
                cin>>numOfBoys;
                cout<<endl<<endl;
                cout<<" ----------------------------------------------\n\n";

                numOfGirls =population - numOfBoys;
                            /*automatic computation of number of girls*/
/*------------------------------2ND ERROR CHECK--------------------------------------------*/
            if(numOfGirls > 0)
            {
               cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                             /*gender population*/
                totalnum= numOfBoys + numOfGirls;

                cout<<"\n\n\t--------1.011. STUDENTS' IDs--------\n"<<endl;
                cout<<"\t NOTE:\n";
                cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
                cout<<"  ENTER \n";
                cout<<"\n\ti). Student's name then\n";
                cout<<"\n\tii). Registration number.\n";
                cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
                cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
                cout<<"\n\t    use the format 100, 101, 102... as default \n";

                cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }            /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                c=0;      /*normalizing the value of c*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }              /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	    ofstream ClassListFile;
	                    //ofstream object
	            ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
                ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
                cout<<"\n\n\t STUDENTS' CLASS LIST \n";
                ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
                cout<<"\t -----------------------------------------------------------------------"<<endl;
                ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
                cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
                ClassListFile<<"\t\t\t\t-------------------------------------\n";
                cout<<"\t\t\t\t-------------------------------------\n";
                if(d<=population)
                {
                    i =0;
                    for(i=0; i<population; i++)
                    {
                         ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                         cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                                  //content passed to the file through writing mode
                    }
                }
                ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
                ClassListFile<<"\n\t "<<dt<<endl;
                ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
                ClassListFile.close();
                               //class list in writing mode closed
                cout<<"\n\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
                cout<<"   NOTE: \n";
                cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
                cout<<"   ENTER: \n";
                cout<<"\n\t1. Subjects and subject-teachers by name:\n";
                cout<<"\n\t   <>. 'S' denotes  Subject while 'T' denotes Teacher.\n";
                cout<<"\n\tNOTE:";
                cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
                cout<<"\n\t     e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)   /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                            /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }
			}
                cout<<"\n\t2. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n\n   Marks for: ";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                    if(stdntMks[k]>subjctMaxMks)
                    {
                        cout<<"\n ---------------------ERROR!!--------------------\n";
                        cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                        cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                        cout<<"  >Please check and try again.\n  System waiting...\n";
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                    }else if(stdntMks[k]<0)
                    {
                         cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                         cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                         cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                         cout<<"\n\tYour choice: ";
                         cin>>choice;
                         if(choice==1)
                         {
                             cout<<"\n\t OK.\n";
                         }else if(choice==2)
                          {
                              cout<<"\n\tRe-enter the marks and continue.\n";
                              cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                              cin>>stdntMks[k];
                           }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    meanPts[i]= sum / float(size);
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                            if(choice==1)
                            {
                                cout<<"\n\t OK.\n";
                             }else if(choice==2)
                             {
                                 cout<<"\n\tRe-enter the marks and continue.\n";
                                 cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                                 cin>>stdntMks[k];
                              }                     /*Checking entered marks*/
                          }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    meanPts[i]= sum / float(size);
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                      
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

               cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 
                                 
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
                ofstream SUBJECTS_perfomance;
	                    //ofstream object
	            SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
                SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
                SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;

                SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t GRADE"<<"\t\t   SUBJECT-TEACHER\n";
                SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
                
                cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
                cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

                cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t GRADE"<<"\t\t   SUBJECT-TEACHER\n";
                cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
                for(k=0; k<size; k++)
                {
                    std::cout.precision(4);
                    subjctMean[k] =subjctTmks[k] / population;
                             /*subject mean points formula*/

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
                SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
                SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
                SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
                SUBJECTS_perfomance.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                   
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 

                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                /*total summation*/

              }else
              {
                  cout<<" FATAL ERROR!\n\n";
                  cout<<" Try again later.\n";
                  cout<<" Program ending...\n";
        }
        }
      }
      }


/**-----------------------------THIRD PACKAGE----------------------------------------
 CLASS GENDER SYSTEM -single gender.
 SUBJECTS SELECTION SYSTEM -different subjects
**/
        else if(classGndr==1 && subjctChoice==2)
        {
            char names[subjctsOffered][10];
            char stdntId[population][1000];

            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            for(k=0; k<population; k++)
            {
                cout<<"\n\t "<<(k+1)<<". ";
                cin>>stdntId[k];
                       /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[k], stdntId[k-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[k]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(k-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                            n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                cout<<"\n\t   "<<" Reg No. ";
                cin>>stdntRegNo[k];
                      /*students' reg. no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[k]== stdntRegNo[k-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[k]<<"' already exists as '"<<stdntId[k-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[k-c]<<" and "<<stdntId[k]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[k]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }
                        }
                    }
                    }
            }       /*Reg number validity check*/
           }
            
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                k =0;
                for(k=0; k<population; k++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                    cout<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           ClassListFile.close();
                            //class list in writing mode closed
                    
                    
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\tContradiction ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

                cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(i=numOfCompulsary; i<subjctsOffered; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                    if(strlen(names[i]) > 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                  }else if(strlen(names[i]) < 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\tContradiction ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

                cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(i=numOfCompulsary; i<subjctsOffered; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                    if(strlen(names[i]) > 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                  }else if(strlen(names[i]) < 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
			}
            cout<<"\n\t4. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
            cin>>subjctMaxMks;

            cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
            cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
            cout<<"\t -----------------------------------------------------------------------";
            cout<<"\n   NOTE: \n";
            cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
            cout<<"\n\n   Marks for: \n";

            for(k=0; k<population; k++)
            {
                cout<<"\n\t"<<(k+1)<<". "<<stdntId[k]<<": \n";
                for(i=0; i<subjctsOffered; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                            cin>>stdntMks[i];
                        }else if(stdntMks[i]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                               cin>>stdntMks[i];
                            }                     /*Checking entered marks*/
                        }
                    sum += stdntMks[i];
                    totalSum += stdntMks[i];
                    subjctTmks[i] +=stdntMks[i];
                }
            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<subjctsOffered; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                            cin>>stdntMks[i];
                        }else if(stdntMks[i]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                               cin>>stdntMks[i];
                            }                     /*Checking entered marks*/
                        }
                    sum += stdntMks[i];
                    totalSum += stdntMks[i];
                    subjctTmks[i] +=stdntMks[i];
                }
            }
            z[k]=sum;
            numslist[k]= sum;
            sum -=z[k]; /*normalizes the value of 'sum' for each student*/


            
            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(k)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            i=0;
            for(i=0; i<subjctsOffered; i++)
            {
                meanMrks[i] = (stdntMks[i] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[k] += meanMrks[i];
                meanPts[k] = meanMrksTotal[k] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[i] >=80)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<80 && meanMrks[i]>=74)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<74 && meanMrks[i]>=68)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[i]<68 && meanMrks[i]>=62)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[i]<62 && meanMrks[i]>=56)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[i]<56 && meanMrks[i]>=50)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<50 && meanMrks[i]>=44)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<44 && meanMrks[i]>=38)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<38 && meanMrks[i]>=32)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<32 && meanMrks[i]>=26)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[i]<26 && meanMrks[i]>=20)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[k] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<80 && meanPts[k]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<74 && meanPts[k]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[k]<68 && meanPts[k]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[k]<62 && meanPts[k]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[k]<56 && meanPts[k]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<50 && meanPts[k]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<44 && meanPts[k]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<38 && meanPts[k]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<32 && meanPts[k]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[k]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
         
            }

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
        

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }
        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                            //class list in writing mode closed
        cout<<"\t ----------------------------------------------------------------------"<<endl;
        
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
    }


/**--------------------------------------FUORTH PACKAGE----------------------------
 CLASS GENDER SYSTEM -both gender.
 SUBJECTS SELECTION SYSTEM -different subjects
**/
        else if(classGndr==2 && subjctChoice==2)
        {
            char names[subjctsOffered][10];
            char stdntId[population][1000];
            cout<<"\n\t1. Number of boys: \n\n\t\t\t= ";
            cin>>numOfBoys;
            numOfGirls =population - numOfBoys;
        if(numOfBoys < population)
        {
            cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                           /*gender population*/

            totalnum= numOfBoys + numOfGirls;
            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";

            cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                     /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                        /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
            
            ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
            ClassListFile<<"\n\t "<<dt<<endl;
            ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
            ClassListFile.close();
                            //class list in writing mode closed
            cout<<"\n\n\t -----------------------------------------------------------------------\n";
            cout<<"\n\t "<<dt<<endl;
            cout<<"\n\n -------------------------------------------------------------------------------\n";
             
                            
                            
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*eexiTeachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }

/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }

/*---------------------------SUBJECT & TEACHERS IDs ERRO CHECK-----------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
			}
                cout<<"\n\t3. Overall percentage marks per subject(i.e 100, 70 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                              /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n   NOTE: \n";
                cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                             /*Boys mean formula*/

                             /*BOYS mean grade */
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }
                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                            /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                            /*total summation*/

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
        
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";

            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        SUBJECTS_perfomance.close();
                            //closes the file
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
                                 /*ORDER LINE*/
/*-----------------------------ERROR(number of boys>=population)---------------------------------*/

                   /*ERROR resolving for numOboys>population*/
            }else if(numOfBoys>=population)
             {
                cout<<"\n ---------------------OOPS!!-----------------\n\n";
                cout<<" #. CONTRADICTING ERROR detected.\n";
                cout<<"\n General class population defined as\n\n\t\t= "<<population<<endl;
                cout<<" Therefore, number of MALE students CANNOT be\n\n\t\t= "<<numOfBoys<<endl;
                cout<<" Check the ERROR and make appropriate correction.\n";
                cout<<" System waiting...\n\n ENTER: \n";
                cout<<"\n\t1. Number of Boys: ";
                cin>>numOfBoys;
                cout<<endl<<endl;
                cout<<" ----------------------------------------------\n\n";

                numOfGirls =population - numOfBoys;
                            /*automatic computation of number of girls*/
/*------------------------------2ND ERROR CHECK--------------------------------------------*/
            if(numOfGirls > 0)
            {
                cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                            /*gender population*/

                totalnum= numOfBoys + numOfGirls;

                cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
                cout<<"\t NOTE:\n";
                cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
                cout<<"\n  ENTER \n";
                cout<<"\n\ti). Student's name then\n";
                cout<<"\n\tii). Registration number.\n";
                cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
                cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
                cout<<"\n\t    use the format 100, 101, 102... as default \n";

                cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                  /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number  check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the two students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                           /*entered id names check*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           cout<<"\n\t "<<dt<<endl;
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           ClassListFile.close();
                            //closes the file
                               
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
                cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
                cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction.\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";

				numOfOptional = subjctsOffered - numOfCompulsary;

                cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
                cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
                cout<<"\n\tNOTE:";
                cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
                cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction.\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }

/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }

/*---------------------------SUBJECT & TEACHERS IDs ERRO CHECK-----------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
			}
                cout<<"\n\t3. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n   NOTE: \n";
                cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }
                        }
                                      /*Checking entered marks*/

                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/

            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                    bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                             /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }
                        }
                                        /*Checking entered marks*/

                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


                        
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }
                    gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                                /*GIRLS mean grade */
                    totalSum =gTotalSum + bTotalSum;
                                /*total summation*/

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }
            SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
            SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
            cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
		}                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                            //class list in writing mode closed
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
        cout<<"\n\n\t -----------------------------------------------------------------------\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\n\n -------------------------------------------------------------------------------\n";
             
		}
        }
        }else
        {
            cout<<"\n ERROR!\n";
            cout<<" ----------------------------------------------\n\n";
            for(i=0; i<2; i++)
            {
            if((classGndr !=1 && classGndr !=2) || (subjctChoice !=1 && subjctChoice !=2))
            {
                cout<<" Undefined choice(s).\n";
                cout<<" Check-->'CLASS GENDER or SUBJECT SELECTION prompt entries\n";
                cout<<" Enter either '1' or '2' and continue.\n";
                cout<<" System waiting...\n";
                cout<<"\n\t CLASS GENDER :  ";
                cin>>classGndr;
                cout<<"\n\t SUBJECT SELECTION :  ";
                cin>>subjctChoice;
                cout<<endl<<endl;
            }
            }
                cout<<" ----------------------------------------------\n";

/**-------------------SYSTEM PACKAGE RECOVERING FROM ERROR--------------------------
**/
/**-------------------FIRST PACKAGE (Recovering from ERROR!)--------------------------
SINGLE gender class
Students taking SIMILAR subjects
**/
        if(classGndr==1 && subjctChoice==1)
        {
            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------\n"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            for(k=0; k<population; k++)
            {
                cout<<"\n\t "<<(k+1)<<". ";
                cin>>stdntId[k];
                       /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[k], stdntId[k-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<stdntId[k]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(k-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                cout<<"\n\t   "<<" Reg No. ";
                cin>>stdntRegNo[k];
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[k]== stdntRegNo[k-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[k]<<"' already exists as '"<<stdntId[k-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[k-c]<<" and "<<stdntId[k]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[k]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }
                        }
                    }
                    }
            }       /*Reg number validity check*/
            }
            
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                k =0;
                for(k=0; k<population; k++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                    cout<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           cout<<"\n\t "<<dt<<endl;
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           ClassListFile.close();
                            //closes the file
                            
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   NOTE: \n";
            cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Subjects and subject-teachers by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE: ";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS .\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }


/*---------------------------SUBJECT & TEACHER IDs CHECK------------------------------------*/


            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teacher IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
			}

            cout<<"\n\t2. Overall percentage marks per subject(i.e 100, 70 etc): \n\n\t\t= ";
            cin>>subjctMaxMks;

            cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 
                                 
            cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
            cout<<"\t -----------------------------------------------------------------------";
            cout<<"\n\n   Marks for: \n";

            for(k=0; k<population; k++)
            {
                cout<<"\n\t"<<(k+1)<<". "<<stdntId[k]<<": \n";
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                cin>>stdntMks[i];
                if(stdntMks[i]>subjctMaxMks)
                {
                    cout<<"\n ---------------------ERROR!!--------------------\n";
                    cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                    cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                    cout<<"  >Please check and try again.\n  System waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                }else if(stdntMks[i]<0)
                {
                    cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                    cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                    cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                    cout<<"\n\tYour choice: ";
                    cin>>choice;
                    if(choice==1)
                    {
                        cout<<"\n\t OK.\n";
                    }else if(choice==2)
                    {
                        cout<<"\n\tRe-enter the marks and continue.\n";
                        cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                        cin>>stdntMks[i];
                    }                     /*Checking entered marks*/
                }
                sum += stdntMks[i];
                totalSum += stdntMks[i];
                subjctTmks[i] +=stdntMks[i];
            }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
            for(i=0; i<size; i++)
            {
                cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                cin>>stdntMks[i];
                if(stdntMks[i]>subjctMaxMks)
            {
                    cout<<"\n ---------------------ERROR!!--------------------\n";
                    cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                    cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                    cout<<"  >Please check and try again.\n  System waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
            }else if(stdntMks[i]<0)
            {
                    cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                    cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                    cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                    cout<<"\n\tYour choice: ";
                    cin>>choice;
                    if(choice==1)
                    {
                        cout<<"\n\t OK.\n";
                    }else if(choice==2)
                    {
                        cout<<"\n\tRe-enter the marks and continue.\n";
                        cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                        cin>>stdntMks[i];
                    }                     /*Checking entered marks*/
                }
                sum += stdntMks[i];
                totalSum += stdntMks[i];
                subjctTmks[i] +=stdntMks[i];
            }
		    }
            z[k]=sum;
            numslist[k]= sum;
            sum -=z[k]; /*normalizes the value of 'sum' for each student*/
            
            
            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(k)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            i=0;
            for(i=0; i<size; i++)
            {
                meanMrks[i] = (stdntMks[i] / subjctMaxMks) * 84;
                                 /*subject mean score */
                meanMrksTotal[k] += meanMrks[i];
                meanPts[k] = meanMrksTotal[k] / size;
                                 /*checking subject grade*/
                std::cout<< std::setprecision(5)<<endl;
                                 /*sets value precision to 5 digits*/
                         
                if(meanMrks[i] >=80)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<80 && meanMrks[i]>=74)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<74 && meanMrks[i]>=68)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[i]<68 && meanMrks[i]>=62)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[i]<62 && meanMrks[i]>=56)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[i]<56 && meanMrks[i]>=50)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<50 && meanMrks[i]>=44)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<44 && meanMrks[i]>=38)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<38 && meanMrks[i]>=32)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<32 && meanMrks[i]>=26)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[i]<26 && meanMrks[i]>=20)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[k] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<80 && meanPts[k]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<74 && meanPts[k]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[k]<68 && meanPts[k]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[k]<62 && meanPts[k]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[k]<56 && meanPts[k]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<50 && meanPts[k]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<44 && meanPts[k]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<38 && meanPts[k]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<32 && meanPts[k]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[k]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
         
             }
             cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
       
        
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        if(c<=population)
        {
            for(k=0; k<size; k++)
            {
                std::cout.precision(4);
                subjctMean[k] =subjctTmks[k] / population;
                std::cout<< std::setprecision(5)<<endl;
                                 /*sets value precision to 5 digits*/

                             /*subject mean points formula*/
                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        SUBJECTS_perfomance.close();
                            //closes the file
                            
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
}


/**------------------------SECOND PACKAGE(Recovering from ERROR!)-----------------------------------------------
 CLASS GENDER SYSTEM -both gender.
 SUBJECTS SELECTION SYSTEM -all similar
 **/
        else if(classGndr==2 && subjctChoice==1)
        {
            cout<<"\n\t1. Number of boys: \n\n\t\t\t= ";
            cin>>numOfBoys;
            numOfGirls =population - numOfBoys;
        if(numOfBoys < population)
        {
            cout<<"\n\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
            /*gender population*/

            totalnum= numOfBoys + numOfGirls;

            cout<<"\n\n\t--------1.011. STUDENTS' IDs--------\n"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                    /*checking repetition in id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2'for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
            
            ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
            ClassListFile<<"\n\t "<<dt<<endl;
            ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\n\t "<<dt<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            ClassListFile.close();
                            //closes the file

            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   NOTE: \n";
            cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Subjects and subject-teachers by name:\n";
            cout<<"\n\t   <>. 'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }
			}
                cout<<"\n\t2. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                            if(choice==1)
                            {
                                cout<<"\n\t OK.\n";
                            }else if(choice==2)
                            {
                                 cout<<"\n\tRe-enter the marks and continue.\n";
                                 cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                                 cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                      
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
    

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        if(c<=population)
        {
            k=0;
            for(k=0; k<size; k++)
            {
                std::cout.precision(4);
                subjctMean[k] =subjctTmks[k] / population;
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                               //class list in writing mode closed
        cout<<"\n\n\t -----------------------------------------------------------------------\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\n\n -------------------------------------------------------------------------------\n";
        
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";

                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                /*total summation*/

          }else    /*ERROR resolving for numOfBoys>population*/
          {
             if(numOfBoys>=population)
             {
                cout<<"\n ---------------------OOPS!!-----------------\n\n";
                cout<<" #. CONTRADICTING ERROR detected.\n";
                cout<<"\n General class population defined as\n\n\t\t= "<<population<<endl;
                cout<<" Therefore, number of MALE students CANNOT be\n\n\t\t= "<<numOfBoys<<endl;
                cout<<" Check the ERROR and make appropriate correction.\n";
                cout<<" System waiting...\n\n ENTER: \n";
                cout<<"\n\t1. Number of Boys: ";
                cin>>numOfBoys;
                cout<<endl<<endl;
                cout<<" ----------------------------------------------\n\n";

                numOfGirls =population - numOfBoys;
                            /*automatic computation of number of girls*/
/*------------------------------2ND ERROR CHECK--------------------------------------------*/
            if(numOfGirls > 0)
            {
               cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                             /*gender population*/
                totalnum= numOfBoys + numOfGirls;

                cout<<"\n\n\t--------1.011. STUDENTS' IDs--------\n"<<endl;
                cout<<"\t NOTE:\n";
                cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
                cout<<"  ENTER \n";
                cout<<"\n\ti). Student's name then\n";
                cout<<"\n\tii). Registration number.\n";
                cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
                cout<<"\n\t<>. Where NO reg. numbers allocated to students,\n";
                cout<<"\n\t    use the format 100, 101, 102... as default \n";

                cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }            /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                c=0;      /*normalizing the value of c*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }              /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	    ofstream ClassListFile;
	                    //ofstream object
	            ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
                ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
                cout<<"\n\n\t STUDENTS' CLASS LIST \n";
                ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
                cout<<"\t -----------------------------------------------------------------------"<<endl;
                ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
                cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
                ClassListFile<<"\t\t\t\t-------------------------------------\n";
                cout<<"\t\t\t\t-------------------------------------\n";
                if(d<=population)
                {
                    i =0;
                    for(i=0; i<population; i++)
                    {
                         ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                         cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                                  //content passed to the file through writing mode
                    }
                }
                ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
                ClassListFile<<"\n\t "<<dt<<endl;
                ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
                ClassListFile.close();
                               //class list in writing mode closed
                cout<<"\n\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
                cout<<"   NOTE: \n";
                cout<<"\n\t#.You selected maximum number of subjects taken  as: \n\n\t\t= "<<size<<endl;
                    /*total number of subjects*/
                cout<<"   ENTER: \n";
                cout<<"\n\t1. Subjects and subject-teachers by name:\n";
                cout<<"\n\t   <>. 'S' denotes  Subject while 'T' denotes Teacher.\n";
                cout<<"\n\tNOTE:";
                cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
                cout<<"\n\t     e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/

                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)   /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/
                            /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<size; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }
                                   /*Checking subject id length*/
                x=0;
                for(x=1; x<size; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)     /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                                    /*subjects' names */
                    cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                    cin>>tchrNames[i];
                            /*Teachers' names */
                }
			}
                cout<<"\n\t2. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n\n   Marks for: ";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                    if(stdntMks[k]>subjctMaxMks)
                    {
                        cout<<"\n ---------------------ERROR!!--------------------\n";
                        cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                        cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                        cout<<"  >Please check and try again.\n  System waiting...\n";
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                    }else if(stdntMks[k]<0)
                    {
                         cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                         cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                         cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                         cout<<"\n\tYour choice: ";
                         cin>>choice;
                         if(choice==1)
                         {
                             cout<<"\n\t OK.\n";
                         }else if(choice==2)
                          {
                              cout<<"\n\tRe-enter the marks and continue.\n";
                              cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                              cin>>stdntMks[k];
                           }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    meanPts[i]= sum / float(size);
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                            if(choice==1)
                            {
                                cout<<"\n\t OK.\n";
                             }else if(choice==2)
                             {
                                 cout<<"\n\tRe-enter the marks and continue.\n";
                                 cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                                 cin>>stdntMks[k];
                              }                     /*Checking entered marks*/
                          }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";

           if(n==2)
           {
                    for(k=0; k<size; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                        if(choice==1)
                        {
                             cout<<"\n\t OK.\n";
                        }else if(choice==2)
                        {
                             cout<<"\n\tRe-enter the marks and continue.\n";
                             cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                             cin>>stdntMks[k];
                        }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }
		            }
                    z[i]=sum;
                    numslist[i]= sum;
                    meanPts[i]= sum / float(size);
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                      
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<size; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                   /* grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                StudentReport.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                            
                            
          	    cout<<"\n\n\t Report generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

               cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 
                                 
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
                ofstream SUBJECTS_perfomance;
	                    //ofstream object
	            SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
                SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
                SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;

                SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t GRADE"<<"\t\t   SUBJECT-TEACHER\n";
                SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
                
                cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
                cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

                cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t\t GRADE"<<"\t\t   SUBJECT-TEACHER\n";
                cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
                for(k=0; k<size; k++)
                {
                    std::cout.precision(4);
                    subjctMean[k] =subjctTmks[k] / population;
                             /*subject mean points formula*/

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
                SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
                SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
                SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
                SUBJECTS_perfomance.close();
                            //closes the file
                cout<<"\n\t -----------------------------------------------------------------------\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\n\n -------------------------------------------------------------------------------\n";
                   
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 

                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                /*total summation*/

              }else
              {
                  cout<<" FATAL ERROR!\n\n";
                  cout<<" Try again later.\n";
                  cout<<" Program ending...\n";
        }
        }
      }
  }


/**-------------------THIRD PACKAGE (Recovering from ERROR!)--------------------------
SINGLE gender class
Students taking DIFFERENT subjects
**/
        else if(classGndr==1 && subjctChoice==2)
        {
            char names[subjctsOffered][10];
            char stdntId[population][1000];

            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";
            for(k=0; k<population; k++)
            {
                cout<<"\n\t "<<(k+1)<<". ";
                cin>>stdntId[k];
                       /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[k], stdntId[k-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[k]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(k-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                            n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are to be all in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(k+1)<<". ";
                            cin>>stdntId[k];
                        }       /*checking whether entered names are identical*/
                        }
                    }
                    }
                }
                cout<<"\n\t   "<<" Reg No. ";
                cin>>stdntRegNo[k];
                      /*students' reg. no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[k]== stdntRegNo[k-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[k]<<"' already exists as '"<<stdntId[k-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[k-c]<<" and "<<stdntId[k]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[k]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k-c+1)<<". "<<stdntId[k-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k-c];
                            cout<<"\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(k+1)<<". "<<stdntId[k]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[k];
                        }
                        }
                    }
                    }
            }       /*Reg number validity check*/
           }
            
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                k =0;
                for(k=0; k<population; k++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                    cout<<"\n\t\t\t\t"<<(k+1)<<". "<<stdntRegNo[k]<<"    \t\t\t"<<stdntId[k]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           ClassListFile.close();
                            //class list in writing mode closed
                    
                    
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\tContradiction ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

                cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(i=numOfCompulsary; i<subjctsOffered; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                    if(strlen(names[i]) > 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                  }else if(strlen(names[i]) < 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }

/*-------------------------SUBJECT & TEACHERS IDs ERROR CHECK------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make corrections\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\tContradiction ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(i=0; i<numOfCompulsary; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                if(strlen(names[i]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                }else if(strlen(names[i]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

                cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(i=numOfCompulsary; i<subjctsOffered; i++)
            {

                cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                cin>>names[i];
                    if(strlen(names[i]) > 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                  }else if(strlen(names[i]) < 3)
                  {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                    cin>>names[i];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[i], names[i-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[i]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(i-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(i-x+1)<<"' and '"<<(i+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(i+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        if(strlen(names[i-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }else if(strlen(names[i-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i-x+1)<<". "<<"S:  ";
                            cin>>names[i-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                            cin>>tchrNames[i-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        if(strlen(names[i]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }else if(strlen(names[i]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[i]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<"S:  ";
                            cin>>names[i];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:   Mr/Mrs. ";
                cin>>tchrNames[i];
                            /*Teachers' names */
            }
			}
            cout<<"\n\t4. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
            cin>>subjctMaxMks;

            cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
            cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
            cout<<"\t -----------------------------------------------------------------------";
            cout<<"\n   NOTE: \n";
            cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
            cout<<"\n\n   Marks for: \n";

            for(k=0; k<population; k++)
            {
                cout<<"\n\t"<<(k+1)<<". "<<stdntId[k]<<": \n";
                for(i=0; i<subjctsOffered; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                            cin>>stdntMks[i];
                        }else if(stdntMks[i]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                               cin>>stdntMks[i];
                            }                     /*Checking entered marks*/
                        }
                    sum += stdntMks[i];
                    totalSum += stdntMks[i];
                    subjctTmks[i] +=stdntMks[i];
                }
            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                for(i=0; i<subjctsOffered; i++)
                {
                    cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                    cin>>stdntMks[i];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[i]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                            cin>>stdntMks[i];
                        }else if(stdntMks[i]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[i]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(i+1)<<". "<<names[i]<<": ";
                               cin>>stdntMks[i];
                            }                     /*Checking entered marks*/
                        }
                    sum += stdntMks[i];
                    totalSum += stdntMks[i];
                    subjctTmks[i] +=stdntMks[i];
                }
            }
            z[k]=sum;
            numslist[k]= sum;
            sum -=z[k]; /*normalizes the value of 'sum' for each student*/


            
            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(k)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[k]<<"\t REG. NO.: "<<stdntRegNo[k]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            i=0;
            for(i=0; i<subjctsOffered; i++)
            {
                meanMrks[i] = (stdntMks[i] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[k] += meanMrks[i];
                meanPts[k] = meanMrksTotal[k] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[i] >=80)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<80 && meanMrks[i]>=74)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[i]<74 && meanMrks[i]>=68)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[i]<68 && meanMrks[i]>=62)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[i]<62 && meanMrks[i]>=56)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[i]<56 && meanMrks[i]>=50)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<50 && meanMrks[i]>=44)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[i]<44 && meanMrks[i]>=38)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<38 && meanMrks[i]>=32)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[i]<32 && meanMrks[i]>=26)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[i]<26 && meanMrks[i]>=20)
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t\t  "<<meanMrks[i]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(i+1)<<". "<<names[i]<<" \t"<<stdntMks[i]<<"\t "<<meanMrks[i]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[k] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<80 && meanPts[k]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[k]<74 && meanPts[k]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[k]<68 && meanPts[k]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[k]<62 && meanPts[k]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[k]<56 && meanPts[k]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<50 && meanPts[k]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[k]<44 && meanPts[k]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<38 && meanPts[k]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[k]<32 && meanPts[k]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[k]<26 && meanPts[k]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
         
            }

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
        

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }
        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                            //class list in writing mode closed
        cout<<"\t ----------------------------------------------------------------------"<<endl;
        
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
    }


/**-------------------FUORTH PACKAGE(Recovering from ERROR!)------------------------------------------------------
MIXED gender class
Students taking DIFFERENT subjects
**/
        else if(classGndr==2 && subjctChoice==2)
        {
            char names[subjctsOffered][10];
            char stdntId[population][1000];
            cout<<"\n\t1. Number of boys: \n\n\t\t\t= ";
            cin>>numOfBoys;
            numOfGirls =population - numOfBoys;
        if(numOfBoys < population)
        {
            cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                           /*gender population*/

            totalnum= numOfBoys + numOfGirls;
            cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
            cout<<"\t NOTE:\n";
            cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
            cout<<"\n  ENTER \n";
            cout<<"\n\ti). Student's name then\n";
            cout<<"\n\tii). Registration number.\n";
            cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
            cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
            cout<<"\n\t    use the format 100, 101, 102... as default \n";

            cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                     /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                        /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
            
            ClassListFile<<"\n\n\t -----------------------------------------------------------------------\n";
            ClassListFile<<"\n\t "<<dt<<endl;
            ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
            ClassListFile.close();
                            //class list in writing mode closed
            cout<<"\n\n\t -----------------------------------------------------------------------\n";
            cout<<"\n\t "<<dt<<endl;
            cout<<"\n\n -------------------------------------------------------------------------------\n";
             
                            
                            
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*eexiTeachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }

/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }

/*---------------------------SUBJECT & TEACHERS IDs ERRO CHECK-----------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
			}
                cout<<"\n\t3. Overall percentage marks per subject(i.e 100, 70 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                              /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n   NOTE: \n";
                cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/



            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                             /*Boys mean formula*/

                             /*BOYS mean grade */
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }
                gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                            /*GIRLS mean grade */
                totalSum =gTotalSum + bTotalSum;
                            /*total summation*/

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
        
            
                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }

        SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
        cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\tSUBJECT-TEACHER\n";
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
        cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";

            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/
                std::setprecision(5);

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tA-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tB-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tC-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tD-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t\tE"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t  E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
        SUBJECTS_perfomance.close();
                            //closes the file
        cout<<"\n\n\t"<<" ----------------------------------------------------------------------"<<endl;
        cout<<"\n\n\tSubjects Merit Report File Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
 
                                 /*ORDER LINE*/
/*-----------------------------ERROR(number of boys>=population)---------------------------------*/

                   /*ERROR resolving for numOboys>population*/
            }else if(numOfBoys>=population)
             {
                cout<<"\n ---------------------OOPS!!-----------------\n\n";
                cout<<" #. CONTRADICTING ERROR detected.\n";
                cout<<"\n General class population defined as\n\n\t\t= "<<population<<endl;
                cout<<" Therefore, number of MALE students CANNOT be\n\n\t\t= "<<numOfBoys<<endl;
                cout<<" Check the ERROR and make appropriate correction.\n";
                cout<<" System waiting...\n\n ENTER: \n";
                cout<<"\n\t1. Number of Boys: ";
                cin>>numOfBoys;
                cout<<endl<<endl;
                cout<<" ----------------------------------------------\n\n";

                numOfGirls =population - numOfBoys;
                            /*automatic computation of number of girls*/
/*------------------------------2ND ERROR CHECK--------------------------------------------*/
            if(numOfGirls > 0)
            {
                cout<<"\t2. Number of girls: \n\n\t\t\t= "<<numOfGirls<<endl;
                            /*gender population*/

                totalnum= numOfBoys + numOfGirls;

                cout<<"\n\n\t --------1.011. STUDENTS' IDs--------"<<endl;
                cout<<"\t NOTE:\n";
                cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
                cout<<"\n  ENTER \n";
                cout<<"\n\ti). Student's name then\n";
                cout<<"\n\tii). Registration number.\n";
                cout<<"\n\t    (e.g ISAAC_N click-ENTER- then Reg No.5200).\n";
                cout<<"\n\t <>.Where NO reg. numbers allocated to students,\n";
                cout<<"\n\t    use the format 100, 101, 102... as default \n";

                cout<<"\n\t1. Male students:\n\n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                  /*checking repetition in entered id names*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number  check*/
                }
                cout<<"\n\t2. Female students:\n\n";
                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t   "<<(i+1)<<". ";
                    cin>>stdntId[i];
                          /*students' names */
                for(x=1; x<population; x++)
                {
                    if(strcmp(stdntId[i], stdntId[i-x])==0)
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------\n";
                        cout<<"\n\t'"<<stdntId[i]<<"' already exists as an Id name for student\n";
                        cout<<"\tin position '"<<(i-x+1)<<"'. \n";
                        cout<<"\n\tPlease confirm this.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1. To correct the REPETITION error OR"<<endl;
                        cout<<"\t  2. To affirm the entered Id name as being SHARED by the two students\n\n\t  Your choice: ";
                        cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice !=1 && nameErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>nameErrorChoice;
                        if(nameErrorChoice==1)
                        {
                            cout<<"\n\tRe-enter the id name for: \n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }else if(nameErrorChoice==2)
                        {
                            cout<<"\n\tRe-enter the Id name with the Surname or First-name\n";
                            cout<<"\tstarting with: \n";
                            cout<<"\n\t i). LOWERCASE letter if the Id name are all to be in uppercase\n";
                            cout<<"\t      (e.g sALIM_SALLEH or SALIM_sALLEH) OR\n";
                            cout<<"\n\t ii). UPPERCASE letter if the Id name are all to be in lowercase\n";
                            cout<<"\t      (e.g Salim_salleh or salim_Salleh)\n";
                            cout<<"\n\t "<<(i+1)<<". ";
                            cin>>stdntId[i];
                        }
                        }
                    }
                    }
                }                           /*entered id names check*/

                    cout<<"\n\t     "<<" Reg No. ";
                    cin>>stdntRegNo[i];
                          /*students' reg no.*/
                for(c=1; c<population; c++)
                {
                    if(stdntRegNo[i]== stdntRegNo[i-c])
                    {
                        cout<<"\n\t-------------------OOPS!!---------------------------------";
                        cout<<"\n\t'"<<stdntRegNo[i]<<"' already exists as '"<<stdntId[i-c]<<"' Reg. Number\n";
                        cout<<"\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both "<<stdntId[i-c]<<" and "<<stdntId[i]<<" OR"<<endl;
                        cout<<"\t  2.To rectify for only "<<stdntId[i]<<"\n\n\t  Your choice: ";
                        cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice !=1 && regErrorChoice !=2)
                        {
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>regErrorChoice;
                        if(regErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i-c+1)<<". "<<stdntId[i-c]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i-c];
                            cout<<"\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }else if(regErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Reg. number for: \n";
                            cout<<"\n\t  "<<(i+1)<<". "<<stdntId[i]<<"\n\t\tReg. No: ";
                            cin>>stdntRegNo[i];
                        }
                        }
                    }
                    }
                }       /*Reg number validity check*/
                }
                
                    //===============CREATING A FILE TO CONTAIN STUDENTS LIST======
                    
                     //Class list file 
        	ofstream ClassListFile;
	                    //ofstream object
	        ClassListFile.open("../../../ClassList.txt");
	                   //file 'Hello.txt' opened
            ClassListFile<<"\n\n\t STUDENTS' CLASS LIST \n";
            cout<<"\n\n\t STUDENTS' CLASS LIST \n";
            ClassListFile<<"\t -----------------------------------------------------------------------"<<endl;
            cout<<"\t -----------------------------------------------------------------------"<<endl;
            ClassListFile<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            cout<<"\n\n\t\t\t\t"<<"REG. NUMBER "<<"\t\tSTUDENT NAME"<<endl;
            ClassListFile<<"\t\t\t\t-------------------------------------\n";
            cout<<"\t\t\t\t-------------------------------------\n";
            if(d<=population)
            {
                i =0;
                for(i=0; i<population; i++)
                {
                    ClassListFile<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                    cout<<"\n\t\t\t\t"<<(i+1)<<". "<<stdntRegNo[i]<<"    \t\t\t"<<stdntId[i]<<endl;
                             //content passed to the file through writing mode
                }
            }
           ClassListFile<<"\n\t -----------------------------------------------------------------------\n";
           ClassListFile<<"\n\t "<<dt<<endl;
           ClassListFile<<"\n\n -------------------------------------------------------------------------------\n";
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           cout<<"\n\t "<<dt<<endl;
           cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
           ClassListFile.close();
                            //closes the file
                               
            cout<<"\n\n\t --------1.012. SUBJECTS--------\n"<<endl;
            cout<<"   ENTER: \n";
            cout<<"\n\t1. Number of ALL subjects offered(e.g 8, 5 etc): \n\n\t\t= ";
            cin>>subjctsOffered;
            if(subjctsOffered>size)
            {
                cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
                cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction.\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";

				numOfOptional = subjctsOffered - numOfCompulsary;

                cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
                cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
                cout<<"\n\tNOTE:";
                cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
                cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction.\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n\t System waiting...\n";
                cout<<"\n\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }

/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }

/*---------------------------SUBJECT & TEACHERS IDs ERRO CHECK-----------------------------------*/

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject and teachers IDs correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
            if(subjctsOffered>size)
            {
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects.\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }else if(subjctsOffered<=size)
        {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of ALL SUBJECTS offered CANNOT be\n\n\t\t= "<<subjctsOffered<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of ALL SUBJECTS offered\n";
                cout<<"\n\t New entry: ";
                cin>>subjctsOffered;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
            cout<<"\n\t2. Number of COMPULSORY subjects: \n\n\t\t= ";
            cin>>numOfCompulsary;
            if(numOfCompulsary<size)
            {
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }else if(numOfCompulsary>=size)
            {
                cout<<"\n\n\t-------------------OOPS!!---------------------------------\n";
                cout<<"\n\t#.CONTRADICTING ERROR detected!\n";
                cout<<"\n\t>Maximum number of subjects taken defined as\n\n\t\t= "<<size<<endl;
                cout<<"\n\t>Therefore number of COMPULSORY subjects CANNOT be\n\n\t\t= "<<numOfCompulsary<<endl;
                cout<<"\n\t>Review your entry and make appropriate correction\n\t System waiting...\n";
                cout<<"\n\t Re-enter the number of COMPULSORY subjects\n";
                cout<<"\n\t New entry: ";
                cin>>numOfCompulsary;
                cout<<"\n\n\t------------------------------------------------------------\n\n";
                 numOfOptional = subjctsOffered - numOfCompulsary;

            cout<<"\n\t3. Compulsory subject and subject-teacher by name:\n";
            cout<<"\n\t   <>.'S' denotes  Subject while 'T' denotes Teacher.\n";
            cout<<"\n\tNOTE:";
            cout<<"\n\t   #.Subject name to be abbreviated in THREE(3) LETTERS.\n";
            cout<<"\n\t      (e.g S: ENG, T: Mr/Mrs. KEN_O etc).\n\n";

/*--------------------------------------COMPULSARY SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------COMPULSORY SUBJECTS-----------------\n";
            for(k=0; k<numOfCompulsary; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=1; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
            }
        }
/*--------------------------------------OPTIONAL SUBJECTS---------------------------------------------------*/

            cout<<"\n\t -------------OPTIONAL SUBJECTS-----------------\n";
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {

                cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                cin>>names[k];
                if(strlen(names[k]) > 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                }else if(strlen(names[k]) < 3)
                {
                    cout<<"\n\t-------------------OOPS!!---------------------------------";
                    cout<<"\n\tSorry!";
                    cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than THREE(3) LETTERS.";
                    cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                    cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                    cin>>names[k];
                                   /*Checking subject id length*/
                }

                x=0;
                for(x=numOfCompulsary; x<subjctsOffered; x++)
                {
                    if(strcmp(names[k], names[k-x])==0)    /*comparing entered subject names if are the same*/
                    {
                        cout<<"\n\t-------------------OOPS!!--------------------------------\n";
                        cout<<"\n\t'"<<names[k]<<"' already exists as an Id name for subject\n";
                        cout<<"\tin position '"<<(k-x+1)<<"' above. \n";
                        cout<<"\n\tPlease CHECK and AMEND the error.\n";
                        cout<<"\n\tENTER: \n";
                        cout<<"\n\t  1.To rectify for both subjects i.e in positions '"<<(k-x+1)<<"' and '"<<(k+1)<<"' above OR"<<endl;
                        cout<<"\t  2.To rectify only for subject in position '"<<(k+1)<<"' above. \n\n\t  Your choice: ";
                        cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                   /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }else if(sbjctErrorChoice !=1 && sbjctErrorChoice !=2)
                        {
                        n =0;
                        for(n=1; n<2; n++)
                        {
                            cout<<"\n\t-------------------ERROR!!---------------------------------";
                            cout<<"\n\t Undefined choice\n";
                            cout<<"\t Please enter '1' or '2' for the above prompt and continue.\n";
                            cout<<"\t System waiting...\n\n\t Your choice: ";
                            cin>>sbjctErrorChoice;
                        if(sbjctErrorChoice==1)
                        {
                            cout<<"\n\t  Re-enter Id name for subjects in position: \n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        if(strlen(names[k-x]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }else if(strlen(names[k-x]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k-x]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k-x+1)<<". "<<"S:  ";
                            cin>>names[k-x];
                        }
                                   /*Checking subject id length*/
                            cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                            cin>>tchrNames[k-x];
                            /*Teachers' names */
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                                        /*Teachers' names */
                        }else if(sbjctErrorChoice==2)
                        {
                            cout<<"\n\t  Re-enter Id name for subject in position: \n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        if(strlen(names[k]) > 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is LONGER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }else if(strlen(names[k]) < 3)
                        {
                            cout<<"\n\t-------------------OOPS!!---------------------------------";
                            cout<<"\n\tSorry!";
                            cout<<"\n\tSubject ID '"<<names[k]<<"' is SHORTER than the THREE(3) LETTERS stipulated.";
                            cout<<"\n\tPlease check and re-enter again.\n\tSystem waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<"S:  ";
                            cin>>names[k];
                        }
                                   /*Checking subject id length*/
                        }
                        }
                    }
                    }

                }
                            /*subjects' id check*/

                            /*subjects' names */
                cout<<"\n\t\t  "<<" T:  Mr/Mrs. ";
                cin>>tchrNames[k];
                            /*Teachers' names */
            }
			}
                cout<<"\n\t3. Overall percentage marks per subject(i.e 100 etc): \n\n\t\t= ";
                cin>>subjctMaxMks;
                /*subjects names */

                cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                cout<<"\n\n\t 1.02. STUDENTS' MARKS PER SUBJECT"<<endl;
                cout<<"\t -----------------------------------------------------------------------";
                cout<<"\n   NOTE: \n";
                cout<<"\n\t#.For subject NOT in student's SUBJECT-SELECTION list enter '00'"<<endl;
                cout<<"\n\n   Marks for: \n";
                for(i=0; i<numOfBoys; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }
                        }
                                      /*Checking entered marks*/

                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/

            
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }

                    bMeanPts =(float(bTotalSum)/ float(numOfBoys)) / 2;
                             /*BOYS mean grade */

                for(i=numOfBoys; i<totalnum; i++)
                {
                    cout<<"\n\t"<<(i+1)<<". "<<stdntId[i]<<": \n";
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[i]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }
                        }
                                        /*Checking entered marks*/

                        sum += stdntMks[k];
                        gTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];

                    }

            cout<<"\n\n\t --------------------------------------------\n";
          	cout<<"\n\t Are all the above entered subject marks correct?\n";
           	cout<<"\t Enter: \n\n\t  1. To proceed OR\n\t  2. To make correction\n";
          	cout<<"\n\t Your entry: ";
           	cin>>n;
            cout<<"\n\n\t --------------------------------------------\n\n";
            if(n==2)
            {
                    for(k=0; k<subjctsOffered; k++)
                    {
                        cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                        cin>>stdntMks[k];
                        if(stdntMks[k]>subjctMaxMks)
                        {
                            cout<<"\n ---------------------ERROR!!--------------------\n";
                            cout<<"\n  >Entered '"<<names[k]<<"' marks OUT of range of the\n";
                            cout<<"   defined OVERALL marks ( "<<subjctMaxMks<<" )."<<endl;
                            cout<<"  >Please check and try again.\n  System waiting...\n";
                            cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                            cin>>stdntMks[k];
                        }else if(stdntMks[k]<0)
                        {
                            cout<<"\n  ---------------------EXCEPTION!!-----------------------\n";
                            cout<<"\n  >Negative value for "<<names[k]<<" marks!\n";
                            cout<<"\n   ENTER:\n\t 1. For YES.\n\t 2. For NO.\n   System waiting...\n";
                            cout<<"\n\tYour choice: ";
                            cin>>choice;
                           if(choice==1)
                           {
                               cout<<"\n\t OK.\n";
                           }else if(choice==2)
                           {
                               cout<<"\n\tRe-enter the marks and continue.\n";
                               cout<<"\n\t\t"<<(k+1)<<". "<<names[k]<<": ";
                               cin>>stdntMks[k];
                            }                     /*Checking entered marks*/
                        }
                        sum += stdntMks[k];
                        bTotalSum += stdntMks[k];
                        subjctTmks[k] +=stdntMks[k];
                    }
            }
                    z[i]=sum;
                    numslist[i]= sum;
                    sum -=z[i]; /*normalizes the value of 'sum' for each student*/


                        
                    //===============CREATING FILEs FOR STUDENTS REPORTS========
                    
                        //Class list file 
        	ofstream StudentReport;
	                    //ofstream object
	        switch(i)
	        {
	        	case 0:
	                   StudentReport.open("../../../../STDNT1_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 1:
	                   StudentReport.open("../../../../STDNT2_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 2:
	                   StudentReport.open("../../../../STDNT3_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 3:
	                   StudentReport.open("../../../../STDNT4_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 4:
	                   StudentReport.open("../../../../STDNT5_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 5:
	                   StudentReport.open("../../../../STDNT6_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 6:
	                   StudentReport.open("../../../../STDNT7_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 7:
	                   StudentReport.open("../../../../STDNT8_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 8:
	                   StudentReport.open("../../../../STDNT9_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 9:
	                   StudentReport.open("../../../../STDNT10_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 10:
	                   StudentReport.open("../../../../STDNT11_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 11:
	                   StudentReport.open("../../../../STDNT12_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 12:
	                   StudentReport.open("../../../../STDNT13_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 13:
	                   StudentReport.open("../../../../STDNT14_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 14:
	                   StudentReport.open("../../../../STDNT15_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 15:
	                   StudentReport.open("../../../../STDNT16_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 16:
	                   StudentReport.open("../../../../STDNT17_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 17:
	                   StudentReport.open("../../../../STDNT18_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 18:
	                   StudentReport.open("../../../../STDNT19_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 19:
	                   StudentReport.open("../../../../STDNT20_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 20:
	                   StudentReport.open("../../../../STDNT21_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 21:
	                   StudentReport.open("../../../../STDNT22_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 22:
	                   StudentReport.open("../../../../STDNT23_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 23:
	                   StudentReport.open("../../../../STDNT24_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 24:
	                   StudentReport.open("../../../../STDNT25_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 25:
	                   StudentReport.open("../../../../STDNT26_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 26:
	                   StudentReport.open("../../../../STDNT27_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 27:
	                   StudentReport.open("../../../../STDNT28_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 28:
	                   StudentReport.open("../../../../STDNT29_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 29:
	                   StudentReport.open("../../../../STDNT30_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 30:
	                   StudentReport.open("../../../../STDNT31_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 31:
	                   StudentReport.open("../../../../STDNT32_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 32:
	                   StudentReport.open("../../../../STDNT33_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 33:
	                   StudentReport.open("../../../../STDNT34_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 34:
	                   StudentReport.open("../../../../STDNT35_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 35:
	                   StudentReport.open("../../../../STDNT36_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 36:
	                   StudentReport.open("../../../../STDNT37_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 37:
	                   StudentReport.open("../../../../STDNT38_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 38:
	                   StudentReport.open("../../../../STDNT39_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 39:
	                   StudentReport.open("../../../../STDNT40_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 40:
	                   StudentReport.open("../../../../STDNT41_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 41:
	                   StudentReport.open("../../../../STDNT42_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 42:
	                   StudentReport.open("../../../../STDNT43_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 43:
	                   StudentReport.open("../../../../STDNT44_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 44:
	                   StudentReport.open("../../../../STDNT45_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 45:
	                   StudentReport.open("../../../../STDNT46_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 46:
	                   StudentReport.open("../../../../STDNT47_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 47:
	                   StudentReport.open("../../../../STDNT48_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 48:
	                   StudentReport.open("../../../../STDNT49_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 49:
	                   StudentReport.open("../../../../STDNT50_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 50:
	                   StudentReport.open("../../../../STDNT51_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 51:
	                   StudentReport.open("../../../../STDNT52_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 52:
	                   StudentReport.open("../../../../STDNT53_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 53:
	                   StudentReport.open("../../../../STDNT54_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 54:
	                   StudentReport.open("../../../../STDNT55_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 55:
	                   StudentReport.open("../../../../STDNT56_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 56:
	                   StudentReport.open("../../../../STDNT57_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 57:
	                   StudentReport.open("../../../../STDNT58_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 58:
	                   StudentReport.open("../../../../STDNT59_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 59:
	                   StudentReport.open("../../../../STDNT60_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 60:
	                   StudentReport.open("../../../../STDNT61_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 61:
	                   StudentReport.open("../../../../STDNT62_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 62:
	                   StudentReport.open("../../../../STDNT63_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 63:
	                   StudentReport.open("../../../../STDN64_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 64:
	                   StudentReport.open("../../../../STDNT65_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 65:
	                   StudentReport.open("../../../../STDNT66_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 66:
	                   StudentReport.open("../../../../STDNT67_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 67:
	                   StudentReport.open("../../../../STDNT68_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 68:
	                   StudentReport.open("../../../../STDNT69_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 69:
	                   StudentReport.open("../../../../STDNT70_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 70:
	                   StudentReport.open("../../../../STDNT71_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 71:
	                   StudentReport.open("../../../../STDNT72_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 72:
	                   StudentReport.open("../../../../STDNT73_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 73:
	                   StudentReport.open("../../../../STDNT74_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 74:
	                   StudentReport.open("../../../../STDNT75_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 75:
	                   StudentReport.open("../../../../STDNT76_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 76:
	                   StudentReport.open("../../../../STDNT77_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 77:
	                   StudentReport.open("../../../../STDNT78_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 78:
	                   StudentReport.open("../../../../STDNT79_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 79:
	                   StudentReport.open("../../../../STDNT80_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 80:
	                   StudentReport.open("../../../../STDNT81_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 81:
	                   StudentReport.open("../../../../STDNT82_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 82:
	                   StudentReport.open("../../../../STDNT83_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 83:
	                   StudentReport.open("../../../../STDNT84_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 84:
	                   StudentReport.open("../../../../STDNT85_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 85:
	                   StudentReport.open("../../../../STDNT86_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 86:
	                   StudentReport.open("../../../../STDNT87_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 87:
	                   StudentReport.open("../../../../STDNT88_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 88:
	                   StudentReport.open("../../../../STDNT89_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 89:
	                   StudentReport.open("../../../../STDNT90_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 90:
	                   StudentReport.open("../../../../STDNT91_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 91:
	                   StudentReport.open("../../../../STDNT92_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 92:
	                   StudentReport.open("../../../../STDNT93_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 93:
	                   StudentReport.open("../../../../STDNT94_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 94:
	                   StudentReport.open("../../../../STDNT95_rpt.txt");
	                             //.txt file created
	                   break;
	        	case 95:
	                   StudentReport.open("../../../../STDNT96_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 96:
	                   StudentReport.open("../../../../STDNT97_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 97:
	                   StudentReport.open("../../../../STDNT98_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 98:
	                   StudentReport.open("../../../../STDNT99_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 99:
	                   StudentReport.open("../../../../STDNT100_rpt.txt");
	                              //.txt file created
	                   break;
	        	case 100:
	                   StudentReport.open("../../../../STDNT101_rpt.txt");
	                              //.txt file created
	                   break;
			}                      //CREATING STUDENTS REPORTS
                        
            cout<<"\n\n -------------------------------------------------------------------------------";
          
            StudentReport<<"\n\n\t STUDENT REPORT "<<endl;
            cout<<"\n\n\t STUDENT REPORT "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            cout<<"\n\n\t STUDENT NAME: "<<stdntId[i]<<"\t REG. NO.: "<<stdntRegNo[i]<<"\t PSTN: "<<endl;
            StudentReport<<"\t -----------------------------------------------------------------------\n";
            cout<<"\t -------------------------------------------------------------------------------------\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            StudentReport<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            cout<<"\t SUBJECT "<<" \tMARKS"<<"\t  MEAN PTS"<<"\tGRADE"<<"\t SUBJECT-TEACHER"<<"\t COMMENT"<<endl;
            StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
            k=0;
            for(k=0; k<subjctsOffered; k++)
            {
                meanMrks[k] = (stdntMks[k] / subjctMaxMks) * 84;
                                 /*subject mean score formula*/
                meanMrksTotal[i] += meanMrks[k];
                meanPts[i] = meanMrksTotal[i] / size;
                std::setprecision(5);

                                 /*checking subject grade*/
                if(meanMrks[k] >=80)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A"<<"\t\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A"<<"\t Mr/Mrs. "<<tchrNames[i]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<80 && meanMrks[k]>=74)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t A-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t A-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Excellent"<<endl;
                }
                else if(meanMrks[k]<74 && meanMrks[k]>=68)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Very Good"<<endl;
                }
                else if(meanMrks[k]<68 && meanMrks[k]>=62)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Good"<<endl;
                }
                else if(meanMrks[k]<62 && meanMrks[k]>=56)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t B-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t B-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Fair"<<endl;
                }
                else if(meanMrks[k]<56 && meanMrks[k]>=50)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<50 && meanMrks[k]>=44)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Average"<<endl;
                }
                else if(meanMrks[k]<44 && meanMrks[k]>=38)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t C-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t C-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<38 && meanMrks[k]>=32)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D+"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D+"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Below Average"<<endl;
                }
                else if(meanMrks[k]<32 && meanMrks[k]>=26)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else if(meanMrks[k]<26 && meanMrks[k]>=20)
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t D-"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t D-"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Weak"<<endl;
                }
                else
                {
                    StudentReport<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t\t  "<<meanMrks[k]<<"\t\t E"<<"\t\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                    cout<<"\n\t "<<(k+1)<<". "<<names[k]<<" \t"<<stdntMks[k]<<"\t "<<meanMrks[k]<<"\t\t E"<<"\t Mr/Mrs. "<<tchrNames[k]<<"\t\t Poor"<<endl;
                }
                }

                                              /* average mean grade system*/
                if(meanPts[i] >=80 )
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A"<<"\t\t\t 	COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<80 && meanPts[i]>=74)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: A-"<<"\t\t\t COMMENT: Excellent"<<endl;
                }
                else if(meanPts[i]<74 && meanPts[i]>=68)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"  GRADE: B+"<<"\t\t\t COMMENT: Very Good"<<endl;
                }
                else if(meanPts[i]<68 && meanPts[i]>=62)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B"<<"\t\t\t COMMENT: Good"<<endl;
                }
                else if(meanPts[i]<62 && meanPts[i]>=56)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: B-"<<"\t\t\t COMMENT: Fair"<<endl;
                }
                else if(meanPts[i]<56 && meanPts[i]>=50)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[k]<<"  AVG MEAN: "<<meanPts[k]<<"   GRADE: C+"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<50 && meanPts[i]>=44)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C"<<"\t\t\t COMMENT: Average"<<endl;
                }
                else if(meanPts[i]<44 && meanPts[i]>=38)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: C-"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<38 && meanPts[i]>=32)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D+"<<"\t\t\t COMMENT: Bellow Average"<<endl;
                }
                else if(meanPts[i]<32 && meanPts[i]>=26)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else if(meanPts[i]<26 && meanPts[i]>=20)
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: D-"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                else
                {
                    StudentReport<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    StudentReport<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                    cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                    cout<<"\n\t TOTAL MKS: "<<z[i]<<"  AVG MEAN: "<<meanPts[i]<<"   GRADE: E"<<"\t\t\t COMMENT: Poor"<<endl;
                }
                StudentReport<<"\n\t -----------------------------------------------------------------------\n";
                StudentReport<<"\n\t "<<dt<<endl;
                StudentReport<<"\n\n -------------------------------------------------------------------------------\n";
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                cout<<"\n\t "<<dt<<endl;
                cout<<"\t - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n";
                StudentReport.close();
                            //closes the file
                            
                            
          	    cout<<"\n\t Report File Generation ... ... ... SUCCESS!\n";
                cout<<"\n\n -------------------------------------------------------------------------------\n\n";
          
                }
                    gMeanPts =(float(gTotalSum)/ float(numOfGirls)) / 2;
                                /*GIRLS mean grade */
                    totalSum =gTotalSum + bTotalSum;
                                /*total summation*/

        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
                                 /*ORDER LINE*/
                                 

                    //===============CREATING A FILE TO CONTAIN SUBJECTS PERFORMANCE======
                    
                     //Class list file 
        ofstream SUBJECTS_perfomance;
	                    //ofstream object
	    SUBJECTS_perfomance.open("../../../Subjects_perfomance.txt");
	                   //file 'Hello.txt' opened
        SUBJECTS_perfomance<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<endl;
        
        cout<<"\n\n\n\t 1.031. SUBJECTS PERFORMANCE"<<endl;
        cout<<"\t"<<" ----------------------------------------------------------------------"<<endl;

        if(c<=population)
        {
            SUBJECTS_perfomance<<"\n\n\t Enter number of students taking the following \n";
            SUBJECTS_perfomance<<"\t OPTIONAL subjects: \n";
            cout<<"\n\n\t Enter number of students taking the following \n";
            cout<<"\t OPTIONAL subjects: \n";
            k =0;
            for(k=numOfCompulsary; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                SUBJECTS_perfomance<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cout<<"\n\t "<<(k+1)<<". "<<names[k]<<": ";
                cin>>numOfStdnts[k];
            }
            SUBJECTS_perfomance<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
            SUBJECTS_perfomance<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            cout<<"\n "<<"\t SUBJECT "<<" \tMEAN POINTS "<<"\t  GRADE"<<"\t\t   SUBJECT-TEACHER\n";
            cout<<"\t"<<" ----------------------------------------------------------------------"<<"\n";
            for(k=0; k<subjctsOffered; k++)
            {
                std::cout.precision(4);
                if(k<numOfCompulsary)
                {
                subjctMean[k] =subjctTmks[k] / population;
                }else
                subjctMean[k] =subjctTmks[k] / numOfStdnts[k];
                             /*subject mean points formula*/

                             /*subjects mean grades*/
        if(subjctMean[k] >=80)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
		}                                    									
        else if(subjctMean[k]<80 && subjctMean[k]>=74)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  A-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<74 && subjctMean[k]>=68)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<68 && subjctMean[k]>=62)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<62 && subjctMean[k]>=56)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  B-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<56 && subjctMean[k]>=50)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<50 && subjctMean[k]>=44)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<44 && subjctMean[k]>=38)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  C-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<38 && subjctMean[k]>=32)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D+"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<32 && subjctMean[k]>=26)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else if(subjctMean[k]<26 && subjctMean[k]>=20)
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  D-"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        else
        {
                     SUBJECTS_perfomance<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
                     cout<<"\n\t "<<(k+1)<<"."<<names[k]<<" \t\t "<<subjctMean[k]<<"\t\t\t\t  E"<<"\t\t\t Mr/Mrs. "<<tchrNames[k]<<endl;
        }
        }
        }
        SUBJECTS_perfomance<<"\n\n\t -----------------------------------------------------------------------\n";
        SUBJECTS_perfomance<<"\n\t "<<dt<<endl;
        SUBJECTS_perfomance<<"\n\n -------------------------------------------------------------------------------\n";
        SUBJECTS_perfomance.close();
                            //class list in writing mode closed
        cout<<"\tSubjects Merit Report Generation ... ... ... SUCCESS!"<<endl;
        cout<<"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
        cout<<"\n\n\t -----------------------------------------------------------------------\n";
        cout<<"\n\t "<<dt<<endl;
        cout<<"\n\n -------------------------------------------------------------------------------\n";
        }
        }else
        {
            cout<<"\n\t ----------------------EXCEPTION----------------------------\n";
            cout<<"\t Please try again.\n";
        }
        }
        
        {
            cout<<"\n ----------------EXCEPTION!!-----------------------"<<endl;
            cout<<"  Try again later.\n";
            cout<<"  Program ending...\n";
        }
        }
    }
};
float computeMean (float x, float y)
{
    classMean = x / y;
    return classMean;
}        /*class mean*/

float computeGradePoints(float b, float c)
{
    gradepts= b / c;
    return gradepts;
}       /*class grade points*/









int main()
{
    cout<<"\n\n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n";
    cout<<"\n ***************************CLASS RESULTS ANALYSIS******************************\n\n";

    cout<<"\n\n   NOTES:\n";
    cout<<"\n     >AQADEMIANALYSIS is an academic user interactive APPLICATION SYSTEM\n";
    cout<<"      that's capable of taking in data(exam results) and process it into a\n";
    cout<<"      precise organised information at the output.\n\n\n    This processed information include:\n";
    cout<<"\n\t1. Students performance merit list(from best performed).\n";
    cout<<"\n\t2. Subjects performance merit list(giving best performed subject).\n";
    cout<<"\n\t3. Student report.\n";
    cout<<"\n\t4. Each gender performance(for mixed gender class).\n";
    cout<<"\n\t5. General class performance(class mean points and grade).\n\n";
                  //system introduction

    cout<<"\n\n   *******************************GETTING STARTED*******************************\n\n";
    std::cout<< std::setprecision(5) <<endl;
    cout<<"\n\t 1.00. CLASS DETAILS"<<endl;
    cout<<"\t -----------------------------------------------------------------------~\n";
    cout<<"\n   NOTE:\n";
    cout<<"\n\t #.For SPACE between names, use UNDERSCORE(_)\n";
    cout<<"\n\n   ENTER: \n\n\t1. Class Id (i.e STD_8E, FORM_4G etc): \n\n\t\t\t- ";
    cin>>classId;
    /*steam/ class name*/
    cout<<"\n\t2. Class population (i.e 20, 32 etc): \n\n\t\t\t=  ";
    cin>>population;
    /*class total population*/
    cout<<"\n\t3. Maximum number of subjects taken by each student (i.e 5, 8 etc): \n\n\t\t\t= ";
    cin>>size;
    /*total number of subjects*/

    Student s1;

    s1.get_data();
    /*accessing class parameters*/
	
	          
                    //===============CREATING A FILE TO CONTAIN CLASS RESULTS LIST======
                    
                     //Class list file 
    ofstream ClassResultsFile;
	                    //ofstream object
	ClassResultsFile.open("../../../ClassResults.txt");
	                   //file 'Hello.txt' opened
            
    ClassResultsFile<<"\n\n\t 1.03. CLASS RESULTS"<<endl;
    cout<<"\n\n\t 1.03. CLASS RESULTS"<<endl;
    ClassResultsFile<<"\t -----------------------------------------------------------------------";
    cout<<"\t -----------------------------------------------------------------------";
    ClassResultsFile<<"\n\n\t Class Id: "<<classId<<endl;
    cout<<"\n\n\t Class Id: "<<classId<<endl;
    if(subjctChoice==2)
    {
        ClassResultsFile<<"\n\t Subjects offered: "<<subjctsOffered<<endl;
        cout<<"\n\t Subjects offered: "<<subjctsOffered<<endl;
        ClassResultsFile<<"\n\t Compulsory subjects: "<<numOfCompulsary<<endl;
        cout<<"\n\t Compulsory subjects: "<<numOfCompulsary<<endl;
        ClassResultsFile<<"\n\t Optional subjects: "<<numOfOptional<<endl;
        cout<<"\n\t Optional subjects: "<<numOfOptional<<endl;
        ClassResultsFile<<"\n\t Maximum number of subjects taken by each student: "<<size<<endl;
        cout<<"\n\t Maximum number of subjects taken by each student: "<<size<<endl;
        ClassResultsFile<<"\n\t '00' denotes subject NOT in student's SUBJECT SELECTON list"<<endl;
        cout<<"\n\t '00' denotes subject NOT in student's SUBJECT SELECTON list"<<endl;
    }
    else
    {
        ClassResultsFile<<"\n\t Subjects taken: "<<size<<endl;
        cout<<"\n\t Subjects taken: "<<size<<endl;
    }
    ClassResultsFile<<"\n\t Class population: "<<population<<" students"<<endl;
    cout<<"\n\t Class population: "<<population<<" students"<<endl;
    if(classGndr==2)
    {
        ClassResultsFile<<"\n\t 1. Boys: "<<numOfBoys<<endl;
        cout<<"\n\t 1. Boys: "<<numOfBoys<<endl;
        ClassResultsFile<<"\t 2. Girls: "<<numOfGirls<<endl;
        cout<<"\t 2. Girls: "<<numOfGirls<<endl;

        if(bMeanPts>gMeanPts)
        {
            ClassResultsFile<<"\n\t Boys performed better than girls: \n\n";
            cout<<"\n\t Boys performed better than girls: \n\n";
            ClassResultsFile<<"\t 1.Boys' mean: "<<bMeanPts<<endl;
            cout<<"\t 1.Boys' mean: "<<bMeanPts<<endl;
            ClassResultsFile<<"\n\t 2.Girls' mean: "<<gMeanPts<<endl;
            cout<<"\n\t 2.Girls' mean: "<<gMeanPts<<endl;
        }
        else if(bMeanPts<gMeanPts)
        {
            ClassResultsFile<<"\n\t Girls performed better than boys: \n\n";
            cout<<"\n\t Girls performed better than boys: \n\n";
            ClassResultsFile<<"\t 1.Girls' mean: "<<gMeanPts<<endl;
            cout<<"\t 1.Girls' mean: "<<gMeanPts<<endl;
            ClassResultsFile<<"\n\t 2.Boys' mean: "<<bMeanPts<<endl;
            cout<<"\n\t 2.Boys' mean: "<<bMeanPts<<endl;
        }
        else
        {
            ClassResultsFile<<"\n\t Boys and girls tied in performance";
            cout<<"\n\t Boys and girls tied in performance";
            ClassResultsFile<<"\t 1.Mean: "<<gMeanPts<<endl;
            cout<<"\t 1.Mean: "<<gMeanPts<<endl;
        }
    }
                /*class details*/
    totalSum= float(totalSum);
    population= float(population);
    subjctMaxMks= float(subjctMaxMks);
               /*variables type-casting*/

               /*Merit list of performance*/
        ClassResultsFile<<"\n\t 1.031. PERFORMANCE MERIT LIST"<<endl;
        cout<<"\n\t 1.031. PERFORMANCE MERIT LIST"<<endl;
        ClassResultsFile<<"\t -------------------------------------------------------\n"<<endl;
        cout<<"\t -------------------------------------------------------\n"<<endl;
    if(classGndr==1)
    {
    for(k=1; k<=(population-1); k++)
  {
      d=0;
      d =k;

      while(d>0 && numslist[d]>numslist[d-1])
      {
          x =0;
          x =numslist[d];
          numslist[d]=numslist[d-1];
          numslist[d-1]= x;
          d--;
      }
      d =k;
      while(d>0 && meanPts[d]>meanPts[d-1])
      {
          x =0;
          x =meanPts[d];
          meanPts[d]=meanPts[d-1];
          meanPts[d-1]= x;
          d--;
      }
  }
       ClassResultsFile<<"\n\t"<<" POSITION"<<"\t\tTOTAL MARKS"<<"\tMEAN POINTS"<<"\tGRADE \n";
       cout<<"\n\t"<<" POSITION"<<"\tTOTAL MARKS"<<"\tMEAN POINTS"<<"\tGRADE \n";
       ClassResultsFile<<"\t"<<" -------------------------------------------------------"<<"\n";
       cout<<"\t"<<" -------------------------------------------------------"<<"\n";

      for(k=0; k<=population-1; k++)
      {
        std::setprecision(5);

        if(meanPts[k] >=80)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" A"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" A"<<endl;
        }
        else if(meanPts[k]<80 && meanPts[k]>=74)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" A-"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" A-"<<endl;
        }
        else if(meanPts[k]<74 && meanPts[k]>=68)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B+"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B+"<<endl;
        }
        else if(meanPts[k]<68 && meanPts[k]>=62)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B"<<endl;
        }
        else if(meanPts[k]<62 && meanPts[k]>=56)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B-"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" B-"<<endl;
        }
        else if(meanPts[k]<56 && meanPts[k]>=50)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C+"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C+"<<endl;
        }
        else if(meanPts[k]<50 && meanPts[k]>=44)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C"<<endl;
        }
        else if(meanPts[k]<44 && meanPts[k]>=38)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C-"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" C-"<<endl;
        }
        else if(meanPts[k]<38 && meanPts[k]>=32)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D+"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D+"<<endl;
        }
        else if(meanPts[k]<32 && meanPts[k]>=26)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D"<<endl;
        }
        else if(meanPts[k]<26 && meanPts[k]>=20)
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D-"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" D-"<<endl;
        }
        else
        {
            ClassResultsFile<<"\n\t "<<(k+1)<<".\t\t\t"<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" E"<<endl;
            cout<<"\n\t "<<(k+1)<<".\t\t "<<numslist[k]<<"\t\t "<<std::setprecision(5)<<meanPts[k]<<"\t\t "<<" E"<<endl;
        }
    }
            ClassResultsFile<<"\n\n\tStudents Marks Allocation\n";
            cout<<"\n\n\tStudents Marks Allocation\n";
            ClassResultsFile<<"\n\t"<<"MARKS "<<" \t\tSTUDENT REG. NUMBER"<<endl;
            cout<<"\n\t"<<"MARKS "<<" \t\tSTUDENT REG. NUMBER"<<endl;
            ClassResultsFile<<"\t-------------------------------------------\n";
            cout<<"\t-------------------------------------------\n";
            if(d<=population)
            {
                k =0;
                for(k=0; k<population; k++)
                {
                    ClassResultsFile<<"\n\t"<<(k+1)<<". "<<z[k]<<"    \t\t"<<stdntRegNo[k]<<endl;
                    cout<<"\n\t"<<(k+1)<<". "<<z[k]<<"    \t\t"<<stdntRegNo[k]<<endl;
                }
            }
    }else
    {
    for(i=1; i<=(totalnum-1); i++)
    {
      d=0;
      d =i;

      while(d>0 && numslist[d]>numslist[d-1])
      {
          x =0;
          x =numslist[d];
          numslist[d]=numslist[d-1];
          numslist[d-1]= x;
          d--;
      }
      d =i;
      while(d>0 && meanPts[d]>meanPts[d-1])
      {
          x =0;
          x =meanPts[d];
          meanPts[d]=meanPts[d-1];
          meanPts[d-1]= x;
          d--;
      }
      }
       ClassResultsFile<<"\t #.Students Performance from top:\n";
       cout<<"\t #.Students Performance from top:\n";
       ClassResultsFile<<"\n\t"<<" Position"<<"\tTotal Marks."<<"\tMean Points."<<"\tGrade \n";
       cout<<"\n\t"<<" Position"<<"\t\tTotal Marks."<<"\t\tMean Points."<<"\t\tGrade \n";
       ClassResultsFile<<"\t"<<" ------------------------------------------------------------------------------"<<"\n";
       cout<<"\t"<<" ------------------------------------------------------------------------------"<<"\n";

    for(i=0; i<totalnum; i++)
    {
        if(meanPts[i] >=80)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" A"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" A"<<endl;
        }
        else if(meanPts[i]<80 && meanPts[i]>=74)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" A-"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" A-"<<endl;
        }
        else if(meanPts[i]<74 && meanPts[i]>=68)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" B+"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" B+"<<endl;
        }
        else if(meanPts[i]<68 && meanPts[i]>=62)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" B"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" B"<<endl;
        }
        else if(meanPts[i]<62 && meanPts[i]>=56)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" B-"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" B-"<<endl;
        }
        else if(meanPts[i]<56 && meanPts[i]>=50)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" C+"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" C+"<<endl;
        }
        else if(meanPts[i]<50 && meanPts[i]>=44)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" C"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" C"<<endl;
        }
        else if(meanPts[i]<44 && meanPts[i]>=38)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" C-"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" C-"<<endl;
        }
        else if(meanPts[i]<38 && meanPts[i]>=32)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" D+"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" D+"<<endl;
        }
        else if(meanPts[i]<32 && meanPts[i]>=26)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" D"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" D"<<endl;
        }
        else if(meanPts[i]<26 && meanPts[i]>=20)
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t\t"<<numslist[i]<<"\t\t "<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" D-"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" D-"<<endl;
        }
        else
        {
            ClassResultsFile<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t\t"<<" E"<<endl;
            cout<<"\n\t "<<(i+1)<<".\t\t\t "<<numslist[i]<<"\t\t\t"<<std::setprecision(5)<<meanPts[i]<<"\t\t\t"<<" E"<<endl;
        }
      }
      
            ClassResultsFile<<"\n\n\tStudents Marks Allocation\n";
            cout<<"\n\n\tStudents Marks Allocation\n";
            ClassResultsFile<<"\n\t"<<"MARKS "<<" \t\tSTUDENT REG. NUMBER"<<endl;
            cout<<"\n\t"<<"MARKS "<<" \t\tSTUDENT REG. NUMBER"<<endl;
            ClassResultsFile<<"\t-------------------------------------------\n";
            cout<<"\t-------------------------------------------\n";
            if(d<=population)
            {
                for(x=0; x<population; x++)
                {
                    ClassResultsFile<<"\n\t"<<(x+1)<<". "<<z[x]<<"   \t\t"<<stdntRegNo[x]<<endl;
                    cout<<"\n\t"<<(x+1)<<". "<<z[x]<<"   \t\t"<<stdntRegNo[x]<<endl;
                }
            }
    }

    ClassResultsFile<<"\n\n\t-------------------------------------------\n\n";
    cout<<"\n\n\t-------------------------------------------\n\n";
    ClassResultsFile<<"\n\t class mean: \n";
    cout<<"\n\t class mean: \n";
    ClassResultsFile<<"\n\t\t"<<computeMean(totalSum, population)<<endl;
    cout<<"\n\t\t"<<computeMean(totalSum, population)<<endl;
    ClassResultsFile<<"\n\t class grade points: \n";
    cout<<"\n\t class grade points: \n";
    ClassResultsFile<<"\n\t\t"<<computeGradePoints(classMean, subjctMaxMks)<<endl;
    cout<<"\n\t\t"<<computeGradePoints(classMean, subjctMaxMks)<<endl;
    /*passing arguments to functions*/

    /*Grading system for 5 subjects*/
    if(size==5)
    {
        if(gradepts==size)
        {
            ClassResultsFile<<"\n\tMean grade: "<<"\n\t\tA"<<endl;
            cout<<"\n\tMean grade: "<<"\n\t\tA"<<endl;
            ClassResultsFile<<"\n\t\t >>Excellent performance"<<endl;
            cout<<"\n\t\t >>Excellent performance"<<endl;
        }
        else if(gradepts<size && gradepts>=size - 0.5)
        {
            ClassResultsFile<<"\n\tMean grade: "<<"\n\n\t\tA-"<<endl;
            cout<<"\n\tMean grade: "<<"\n\n\t\tA-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Excellent performance"<<endl;
            cout<<"\n\t\t >>Fairly Excellent performance"<<endl;
        }
        else if(gradepts<size - 0.5 && gradepts>=size - 1.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            ClassResultsFile<<"\n\t\t >>Very Good performance"<<endl;
            cout<<"\n\t\t >>Very Good performance"<<endl;
        }
        else if(gradepts<size - 1.0 && gradepts>=size - 1.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            ClassResultsFile<<"\n\t\t >>Good performance"<<endl;
            cout<<"\n\t\t >>Good performance"<<endl;
        }
        else if(gradepts<size - 1.5 && gradepts>=size - 2.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            ClassResultsFile<<"\n\t\t >>Average performance"<<endl;
            cout<<"\n\t\t >>Average performance"<<endl;
        }
        else if(gradepts<size - 2.0 && gradepts>=size - 2.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Average performance"<<endl;
            cout<<"\n\t\t >>Fairly Average performance"<<endl;
        }
        else if(gradepts<size - 2.5 && gradepts>=size - 3.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fair performance"<<endl;
            cout<<"\n\t\t >>Fair performance"<<endl;
        }
        else if(gradepts<size - 3.0 && gradepts>=size - 3.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 3.5 && gradepts>=size - 4.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 4.0 && gradepts>=size - 4.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }
        else if(gradepts<size - 4.5 && gradepts>=size - 5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }
        else
        {
            cout<<"\t Undefined grade points\n";
        }
    }
    /*Grading system for 8 subjects*/
    if(size==8)
    {
        if(gradepts>=size - 0.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tA"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tA"<<endl;
            ClassResultsFile<<"\n\t\t >>Excellent performance"<<endl;
            cout<<"\n\t\t >>Excellent performance"<<endl;
        }
        else if(gradepts<size - 0.5 && gradepts>=size - 1.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tA-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tA-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Excellent performance"<<endl;
            cout<<"\n\t\t >>Fairly Excellent performance"<<endl;
        }
        else if(gradepts<size - 1.0 && gradepts>=size - 1.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            ClassResultsFile<<"\n\t\t >>Very Good performance"<<endl;
            cout<<"\n\t\t >>Very Good performance"<<endl;
        }
        else if(gradepts<size - 1.5 && gradepts>=size - 2.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            ClassResultsFile<<"\n\t\t >>Good performance"<<endl;
            cout<<"\n\t\t >>Good performance"<<endl;
        }
        else if(gradepts<size - 2.0 && gradepts>=size - 2.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            ClassResultsFile<<"\n\t\t >>Average performance"<<endl;
            cout<<"\n\t\t >>Average performance"<<endl;
        }
        else if(gradepts<size - 2.5 && gradepts>=size - 3.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Average performance"<<endl;
            cout<<"\n\t\t >>Fairly Average performance"<<endl;
        }
        else if(gradepts<size - 3.0 && gradepts>=size - 3.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fair performance"<<endl;
            cout<<"\n\t\t >>Fair performance"<<endl;
        }
        else if(gradepts<size - 3.5 && gradepts>=size - 4.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 4.0 && gradepts>=size - 4.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 4.5 && gradepts>=size - 5.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }
        else if(gradepts<size - 5.0 && gradepts>=size - 5.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }
        else
          {
            cout<<"\t Undefined grade points\n";
          }
    }
    /*Grading system for 10 subjects*/
    if(size==10)
    {
        if(gradepts>size - 1.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tA"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tA"<<endl;
            ClassResultsFile<<"\n\t\t >>Excellent performance"<<endl;
            cout<<"\n\t\t >>Excellent performance"<<endl;
        }
        else if(gradepts<size - 1.0 && gradepts>=size - 2.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tA-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tA-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Excellent performance"<<endl;
            cout<<"\n\t\t >>Fairly Excellent performance"<<endl;
        }
        else if(gradepts<size - 2.0 && gradepts>=size - 3.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB+"<<endl;
            ClassResultsFile<<"\n\t\t >>Very Good performance"<<endl;
            cout<<"\n\t\t >>Very Good performance"<<endl;
        }
        else if(gradepts<size - 3.0 && gradepts>=size - 4.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tB-"<<endl;
            ClassResultsFile<<"\n\t\t >>Good performance"<<endl;
            cout<<"\n\t\t >>Good performance"<<endl;
        }
        else if(gradepts<size - 4.0 && gradepts>=size - 5.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC+"<<endl;
            ClassResultsFile<<"\n\t\t >>Average performance"<<endl;
            cout<<"\n\t\t >>Average performance"<<endl;
        }
        else if(gradepts<size - 5.0 && gradepts>=size - 6.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC"<<endl;
            ClassResultsFile<<"\n\t\t >>Fairly Average performance"<<endl;
            cout<<"\n\t\t >>Fairly Average performance"<<endl;
        }
        else if(gradepts<size - 6.0 && gradepts>=size - 7.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\t\tC-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tC-"<<endl;
            ClassResultsFile<<"\n\t\t >>Fair performance"<<endl;
            cout<<"\n\t\t >>Fair performance"<<endl;
        }
        else if(gradepts<size - 7.0 && gradepts>=size - 8.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD+"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 8.0 && gradepts>=size - 9.0)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD"<<endl;
            ClassResultsFile<<"\n\t\t >>Bellow average "<<endl;
            cout<<"\n\t\t >>Bellow average "<<endl;
        }
        else if(gradepts<size - 9.0 && gradepts>=size - 9.5)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tD-"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }
        else if(gradepts<size - 9.5 && gradepts>=size - 10)
        {
            ClassResultsFile<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            cout<<"\n\t Mean grade: "<<"\n\n\t\tE"<<endl;
            ClassResultsFile<<"\n\t\t >>Poor performance "<<endl;
            cout<<"\n\t\t >>Poor performance "<<endl;
        }else
          {
            cout<<"\t Undefined grade points\n";
          }
    }
    ClassResultsFile.close();
                     //closes the opened file

                /*--------OVERALL ERROR CHECK-------------*/
    if(size==0 || population==0 || meanPts==0)
    {
        cout<<"\n\t----------ERROR MESSAGE-----------";
        cout<<"\n\t Oops!!\n\t -Syntax violation \n";
        cout<<"\t -Check your immediate last entries and try again\n";
    }

    cout<<"\n"<<"---------------------------"<<logo<<"---------------------------"<<endl;
    return 0;
}

